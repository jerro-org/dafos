*ANY (
    *EQ=
    *NEQ<>
)

*OBJ (
    *SIZE {
        ? object
        ! size
    }
)
*DATA
*TYPE

' compatible with all types
*BITS ()

' Type with special syntax
*ARRAY# (
    ?size
    ?ElementType
    *GET@ {
        ?array
        ?at
        !element
    }
    *SET@ {
        ?array
        ?at
        ?array
    }
    *LEN {
        ?array
    }
)

''( Example:

*Matrix3D : ARRAY : 3 (ARRAY 3 FLOAT32)
'' With special syntax:
*Matrix3D : 3#3#FLOAT32
'' Access:
m : Matrix3D : (1 0 0) (0 1 0) (0 0 1)
m@1@1 : 2  -- m becomes a new matrix
m.ElementType

*OpenArrayFunction {
    ?arr : n#m#FLOAT32
    i : 0..n {  ''
        j : 0..m { 

        }
    }
}
)''


*BOOL (
    |TRUE
    |FALSE
    *AND&& ()
    *OR|| ()
)

*NUM (
    *numerator (
        *size
        *negative
    )
    *denominator (
        *size
    )
    *exponent (
        *size
        *neg
    )

    *ADDWRAP+ {
        ?a
        ?b
        !c
    }
    *ADDEXT++ {
        ?a
        ?b
        !c
    }
    *DIVTRUNC/
    *DIVEXT//
    *REM\
    '' ...
)

*SET (
    (
        ?Accessor  '' Must have finite (small) number of possible values (Enumeration)
    |
        ?n : UINT
    )

    AND*
    OR+
    XOR^
)

*INT : NUM (
    .denominator : 1
    .exponent : 0
)

*INT32 : INT (
    .numerator (
        .size : 32
    )
)

*REF (
    *GET {
        ?_any : ANY
        !ref : REF
    }
)